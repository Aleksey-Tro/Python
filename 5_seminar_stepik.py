"""
Задача №35.
На вход программе подаются два целых числа a и b (a ≤ b).
Напишите программу, которая подсчитывает количество чисел
в диапазоне от a до b включительно, куб которых оканчивается
на 4 или 9.
Формат входных данных:
На вход программе подаются два целых числа a и b (a ≤ b).
Формат выходных данных:
Программа должна вывести одно целое число в соответствии с
условием программы. Примечание. Куб числа a – это его третья
степень a 3.
"""

# a, b = int(input()), int(input())
# count = 0

# for i in range(a, b +1):
#    if i**3 % 10 == 4 or i**3 % 10 == 9:
#       count += 1

# print(count)



"""
Задача №36.
На вход программе подается натуральное число n, а затем n целых
чисел, каждое на отдельной строке. Напишите программу, которая
подсчитывает сумму введенных чисел.
Формат входных данных:
На вход программе подаются натуральное число n, а затем n целых
чисел, каждое на отдельной строке.
Формат выходных данных:
Программа должна вывести сумму данных чисел.
"""

# n = int(input())
# total = 0

# for i in range(n):
#    total += int(input())

# print(total)



"""
Задача №37.
На вход программе подается натуральное число n. Напишите
программу, которая вычисляет значение выражения
(1 + (1 / 2) + (1 / 3) + … + (1 / n) - ln(n).
Примечание. Для вычисления натурального логарифма воспользуйтесь
функцией log(n), которая находится в модуле math.
"""

# import math


# n = int(input())
# count = float(1)

# for i in range(2, n + 1):
#    num = float(1 / i)
#    count += num

# print(count - math.log(n))



"""
Задача №38.
На вход программе подается натуральное число n. Напишите
программу, которая подсчитывает сумму тех чисел от 1 до n
(включительно), квадрат которых оканчивается на 2, 5 или 8.
Формат входных данных:
На вход программе подается натуральное число n.
Формат выходных данных:
Программа должна вывести единственное число в соответствии
с условием задачи.
Примечание. Если таких чисел нет в указанном диапазоне, то
следует вывести 0.
"""

# n = int(input())
# total = 0

# for i in range(1, n + 1):
#    if i ** 2 % 10 == 2 or i ** 2 % 10 == 5 or i ** 2 % 10 == 8:
#       total += i

# print(total)



"""
Задача №39.
На вход программе подается натуральное число n. Напишите программу,
которая вычисляет n!.
Входные данные:
На вход программе подается натуральное число n, (n ≤ 12).
Выходные данные:
Программа должна вывести единственное число в соответствии с условием задачи.
Примечание. Факториалом натурального числа n, называется произведение
всех натуральных чисел от 1 до n, то есть n! = 1⋅2⋅3⋅ … ⋅n
"""

# import math

# n = int(input())

# print(math.factorial(n))



"""
Задача №40.
Напишите программу, которая считывает 10 чисел и выводит
произведение отличных от нуля чисел.
Формат входных данных:
На вход программе подаются 10 целых чисел, каждое на отдельной строке.
Формат выходных данных:
Программа должна вывести произведение отличных от нуля чисел.
Примечание. Гарантируется, что хотя бы одно из 10 чисел
является ненулевым.
"""

# total = 1

# for i in range(10):
#    n = int(input())
#    if n != 0: total *= n

# print(total)



"""
Задача №41.
На вход программе подается натуральное число n. Напишите
программу, которая вычисляет сумму всех его делителей.
Входные данные:
На вход программе подается натуральное число n.
Выходные данные:
Программа должна вывести единственное число в соответствии
с условием задачи.
Примечание. Функция подсчета суммы всех делителей числа
является очень важной в теории чисел.
"""

# n = int(input())
# total = 0

# for i in range(1, n):
#    if n % i == 0: total += i

# print(total + n)



"""
Задача №42.
На вход программе подается натуральное число n. Напишите
программу вычисления знакочередующей суммы:
1 - 2 + 3 - 4 + 5 - 6 + … + (-1) ** n + 1 *n
Входные данные:
На вход программе подается натуральное число n.
Выходные данные:
Программа должна вывести единственное число в соответствии
с условием задачи.
"""

# n = int(input())
# res = 0

# for i in range(1, n + 1):
#    res = res + (-1) ** (i + 1) * i

# print(res)



"""
Задача №43.
На вход программе подается натуральное число n, а затем n различных
натуральных чисел последовательности, каждое на отдельной строке.
Напишите программу, которая выводит наибольшее и второе наибольшее
число последовательности.
Формат входных данных:
На вход программе подаются натуральное число n ≥ 2, а затем n
различных натуральных чисел, каждое на отдельной строке.
Формат выходных данных:
Программа должна вывести два наибольших числа, каждое на отдельной
строке.
"""

# n = int(input())
# max_1 = 0
# max_2 = 0

# for i in range(n):
#    num = int(input())
#    if num > max_1:
#       max_2 = max_1
#       max_1 = num
#    elif num > max2:
#       max2 = num

# print()
# print(max_1, max_2, sep = '\n')



"""
Задача №44.
Напишите программу, которая считывает последовательность из 10
целых чисел и определяет, является ли каждое из них четным или нет.
Формат входных данных:
На вход программе подаются 10 целых чисел, каждое на отдельной строке.
Формат выходных данных:
Программа должна вывести строку «YES», если все числа четные,
и «NO» в ином случае.
"""

# total = 0

# for i in range(10):
#    num = int(input())
#    total += num

# if total % 2 == 0:
#    print('YES')
# else:
#    print('NO')



"""
Задача №45.
Напишите программу, которая считывает натуральное число n и выводит
первые n чисел последовательности Фибоначчи.
Формат входных данных:
На вход программе подается одно число n (n≤100) – количество членов
последовательности.
Формат выходных данных:
Программа должна вывести члены последовательности Фибоначчи,
отделенные символом пробела.
Примечание. Последовательность Фибоначчи – это последовательность
натуральных чисел, где каждое последующее число является суммой двух
предыдущих чисел.
"""

# n = int(input())
# n1 = 1
# n2 = 1

# for i in range(n):
#    if i < 2:
#       print(1, end = ' ')
#    else:
#       n1, n2 = n2, n2 + n1
#       print(n2, end = ' ')
