"""
Задача №37.
Дано натуральное число N и последжовательсность
из N элементов. Требуется вывести эту последовательность
в обратном порядке. В коде запрещается использовать циклы
и объевлять массивы.
"""

# b = int(input())

# def num(t):
#    if t == 0:
#       return ''
#    s = input('Число: ')
#    return num(t - 1) + s + ' '

# print(num(b))

"""
Задача №38.
Дана строка, Требуется определить, является ли данная
строка палиндромом. Используйте рекурсию.
"""

# string = input('Введите слово: ')

# def pol(s):
#    if len(s) <= 1:
#       return True
#    elif s[0] == s[-1]:
#       return pol(s[1: -1])
#    return False

# print(pol(string))



"""
Задача №39.
Дана массив, состоящий из целых чисел. Напишите
Программу, которая в данном массиве определит
кол-во элементов, у которых два соседних элемента
и при этом оба соседних элемента меньше данного.
Сначала вводится число n - кол-во элементов в
массиве, далее массив заполняется.
"""

# Первое решение
# from random import randint


# n = int(input('Введите кол-во элементов в массиве: '))
# a = [randint(0, 10) for i in range(0, n)]
# res = 0

# for i in range(1, n - 1):
#    if a[i] > a[i-1] and a[i] > a[i+1]:
#       res +=1


# print(a)
# print('Кол-во элементов массива, у которого два соседних элемента меньше самого элемента =', res)



"""
Задача №40.
Определить индексы элементов массива (списка), значения
которых принадлежат заданному диапазону (т.е. не меньше
заданного минимума и не больше заданного максимума). На
вход подается список с элементамиlist_1 и границы
диапазона в виде чисел min_number, max_number.
"""

# list_1 = [-5, 9, 0, 3, -1, -2, 1, 4, -2, 10, 2, 0, -9, 8, 10, -9, 0, -5, -5, 7]
# min_number = 0
# max_number = 10

# for i in range(0, len(list_1)):
#    if list_1[i] >= min_number and list_1[i] <= max_number:
#       print(i)


"""
Задача №41.
Данны два массива чисел. Требуется вывести элементы первого
массива, которых нет во втором массиве(в том же порядке, в
котором они идут в первом массиве). Пользователь вводит число
n - кол-во элементов в первом массиве, затем n чисел - элементы
этого массива, далее число m - кол-во элементов второго массива,
затем m чисел - элементы этого массива.
"""

# Первое решение
# n = int(input('Введите кол-во элементов первого массива: '))
# m = int(input('Введите кол-во элементов второго массива: '))

# array_N = [0] * n
# array_M = [0] * m

# def fill_array(a):
#    for i in range(0, len(a)):
#       print('Введите', i + 1, 'элемент массива: ', end = '')
#       a[i] = int(input())
#    return a

# fill_array(array_N)
# fill_array(array_M)

# print(array_N, array_M)

# for i in array_N:
#       if array_M.count(i) == 0:
#          print(i, end = ' ')



# Второе решение(Не подходит для ситуаций, когда есть одинаковые
# значения в массиве, так как действие происходит через множество)

# n = int(input('Введите кол-во элементов первого массива: '))
# m = int(input('Введите кол-во элементов второго массива: '))

# arrayN = [0] * n
# arrayM = [0] * m

# for i in range(0, len(arrayN)):
#       print('Введите', i, 'элемент массива: ', end = '')
#       arrayN[i] = int(input())

# for i in range(0, len(arrayM)):
#       print('Введите', i, 'элемент массива: ', end = '')
#       arrayM[i] = int(input())

# print(arrayM, arrayN)
# print(set(arrayN) - set(arrayM))



"""
Задача №42.
Заполните массив элементами арифметической прогрессии.
Её первый элемент a1 , разность d и количество элементов
n будет задано автоматически. Формула для получения n-го
члена прогрессии: an = a1 + (n-1) * d.
"""

# a1 = 2
# d = 3
# n = 4

# for i in range(n):
#    print(a1 + i * d)



"""
Задача №43.
Дано целое число k, программа должна вывести все пары
дружественных чисел, каждое из которых не провосходит
k. Дружественные числа - это различные два натуральных
числа n и m, сумма делителей которых равна второму
числу(включая 1, но исключая само число) и наоборот.
"""

# k = int(input('Введите число: '))

# list_1 = list()

# for i in range(1, k):
#    n = 0
#    for j in range(1, i // 2 + 1):
#       if i % j == 0:
#          n += j
#    list_1.append([i, n])

# for i in range(len(list_1)):
#    for j in range(i, len(list_1)):
#       if i != j and list_1[i][0] == list_1[j][1] and list_1[i][1] == list_1[j][0]:
#          print(list_1[i])
